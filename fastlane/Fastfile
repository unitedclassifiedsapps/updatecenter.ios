before_all do
  xcversion(version: "~> 9")
  clear_derived_data
end

lane :test do |options|
  cocoapods(podfile: 'Example/Podfile', try_repo_update_on_error: true)
  podname=sh('pod ipc spec ../UpdateCenter.podspec | python -c \'import json,sys,sets;obj=json.load(sys.stdin);print(obj["name"])\'|tr -d \'\n\'')
  scan(
    workspace:'Example/UpdateCenter.xcworkspace',
    scheme:podname+'-Example',
    code_coverage:true,
    output_directory:"fastlane/test_output/"+podname
    )
  xcov(
    workspace:'Example/UpdateCenter.xcworkspace',
    scheme:podname+'-Example',
    output_directory: "fastlane/test_output/"+podname+"/coverage",
    include_targets: "UpdateCenter.framework"
  )
end

lane :documentation do |options|
  cocoapods(podfile: 'Example/Podfile', try_repo_update_on_error: true)
  podname=sh('pod ipc spec ../UpdateCenter.podspec | python -c \'import json,sys,sets;obj=json.load(sys.stdin);print(obj["name"])\'|tr -d \'\n\'')
  xcclean(
    workspace:'Example/UpdateCenter.xcworkspace',
    scheme:podname
  )
  sh('cd .. && jazzy --output fastlane/docs/'+podname+' --xcodebuild-arguments -workspace,Example/UpdateCenter.xcworkspace,-scheme,'+podname)
end

desc "Lints pod based on podspec as parameter"
lane :lint_pod do |options|
  pod_lib_lint(allow_warnings: true)
end

desc "Releases pod based on podspec as parameter"
lane :release_pod do |options|
  version=sh('pod ipc spec ../UpdateCenter.podspec | python -c \'import json,sys,sets;obj=json.load(sys.stdin);print(obj["version"])\'|tr -d \'\n\'')
  if !git_tag_exists(tag: version)
    lint_pod options
    sh('git tag -m "Release '+version+'" "'+version+'"')
    sh('git push --tags')
    pod_push(path: 'UpdateCenter.podspec', allow_warnings: true, verbose: true)
  end
end
